# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eha36IMJgcgRiL3-p031rJE_wP8gJhOS
"""

!pip install kaggle

!mkdir .kaggle

import json
token = {"username":"your-username","key":"your-key"}
with open('/content/.kaggle/kaggle.json', 'w') as file:
    json.dump(token, file)

!cp /content/.kaggle/kaggle.json ~/.kaggle/kaggle.json

!kaggle config set -n path -v{/content}

!chmod 600 /root/.kaggle/kaggle.json

!kaggle datasets download -d columbine/imdb-dataset-sentiment-analysis-in-csv-format

cd datasets/columbine/imdb-dataset-sentiment-analysis-in-csv-format

!unzip \*.zip

from sklearn.naive_bayes import GaussianNB

import pandas as pd
import numpy as np

df=pd.read_csv("Train.csv")

df.tail(5)

df["label"].head(5)

x=df["text"]
y=df["label"]

from sklearn.feature_extraction.text import CountVectorizer

sam_arr=[]

from nltk.stem.porter import PorterStemmer
from nltk.corpus import stopwords
from sklearn.model_selection import train_test_split

import nltk
nltk.download('stopwords')

ps = PorterStemmer()

for word in x:
  if word not in set(stopwords.words('english')):
    sam_arr.append(ps.stem(word))

cv = CountVectorizer(max_features=1500)

sam_arr = cv.fit_transform(sam_arr).toarray()

X_train, X_test, y_train, y_test = train_test_split(sam_arr, y, test_size=0.20, random_state=0)

classifier = GaussianNB()
classifier.fit(X_train, y_train)

op=classifier.predict(X_test)

op

y_test



from sklearn.metrics import accuracy_score
accuracy_score(op,y_test)
